<div class="col-md-2">
  <div class="sidebar"></div>
</div>
<div class="col-md-10">
  <div class="content">
    <ul class="breadcrumb">
      <li>管理面板</li>
      <li>节点管理</li>
      <li>属性管理</li>
    </ul>
    <section>
      <div class="page-header">
        <h1>节点所有属性 - <%= @node.name %></h1>
      </div>
      <ul id="ztree" class="ztree">
      </ul>
    </section>
  </div>
</div>

<script type="text/javascript">
var zTreeObj,
setting = {
  async: {
    enable: true,
    url: "/cpanel/nodes/<%= @node.id %>/categories.json",
    dataType: "json",
    type: "get",
    autoParam: ["id"],
    dataFilter: filter
  },
  edit: {
    enable: true,
    drag: {
      prev: true,
      next: true,
      inner: false
    }
  },
  callback: {
    beforeRemove: beforeRemove,
    beforeRename: beforeRename,
    onRemove: onRemove,
    onRename: onRename,
    beforeDrag: beforeDrag,
    beforeDrop: beforeDrop
  },
  view: {
    expandSpeed: "",
    addHoverDom: addHoverDom,
    removeHoverDom: removeHoverDom,
    selectedMulti: false
  }
};

function filter(treeId, parentNode, childNodes) {
  if (!childNodes) return null;  
  for (var i=0, l=childNodes.length; i<l; i++) {
    childNodes[i] = {id:childNodes[i].id, pId: childNodes[i].parent_id, name:childNodes[i].name.replace('',''), isParent:true, open:true};
  }  
  return childNodes;  
};
function beforeRemove(treeId, treeNode) {
  var zTree = $.fn.zTree.getZTreeObj("ztree");
  zTree.selectNode(treeNode);
  return confirm("确认删除 节点 -- " + treeNode.name + " 吗？");
};
function onRemove(event, treeId, treeNode) {
  $.ajax({
    url: "/cpanel/nodes/<%= @node.id %>/categories/" + treeNode.id,
    type: "DELETE"
  });
};
function beforeRename(treeId, treeNode, newName) {
  if (newName.length == 0) {
    alert("");
    return false;
  }
  return true;
};
function onRename(event, treeId, treeNode, isCancel) {
  //alert(window.location.href + "/" + treeNode.id);
  $.ajax({
    url: "/cpanel/nodes/<%= @node.id %>/categories/" + treeNode.id,
    type: "PUT",
    data: {
      tn: {
        name: treeNode.name
      }
    }
  });
};
function beforeDrag(treeId, treeNodes) {
};
function beforeDrop(treeId, treeNodes, targetNode, moveType) {
};
var newCount = 1;
function addHoverDom(treeId, treeNode) {
  var sObj = $("#" + treeNode.tId + "_span");
  if (treeNode.editNameFlag || $("#addBtn_"+treeNode.tId).length>0) return;
  var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
    + "' title='add node' onfocus='this.blur();'></span>";
  sObj.after(addStr);
  var btn = $("#addBtn_"+treeNode.tId);
  if (btn) btn.bind("click", function() {
    $.ajax({
      url: window.location.href,
      type: "POST",
      data: {
        tn: {
          name: "新节点",
          parent_id: treeNode.id
        }
      },
      success: function(data, textStatus) {
        var zTree = $.fn.zTree.getZTreeObj("ztree");
        zTree.addNodes(treeNode, {id: data.id, pId: treeNode.id, name: data.name});
      }
    });
    
    return false;
  });
};
function removeHoverDom(treeId, treeNode) {
  $("#addBtn_" + treeNode.tId).unbind().remove();
};

zTreeNodes = [
  {id: "0", name:"<%= @node.name %>", isParent:true, open:false
  }
];

$(document).ready(function(){
  zTreeObj = $.fn.zTree.init($("#ztree"), setting, zTreeNodes);
});
</script>